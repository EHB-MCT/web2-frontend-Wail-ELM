/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/scripts.js":
/*!************************!*\
  !*** ./src/scripts.js ***!
  \************************/
/***/ (() => {

eval("function displayFeedback(message, type) {\r\n  const feedbackElement = document.getElementById('feedback');\r\n  feedbackElement.textContent = message;\r\n  feedbackElement.className = type;\r\n\r\n  setTimeout(() => {\r\n    feedbackElement.textContent = '';\r\n    feedbackElement.className = '';\r\n  }, 1000);\r\n}\r\n\r\nasync function getAllChallenges() {\r\n\r\n  // https://hosting-backend-web-2-august-wail-el.onrender.com\r\n  try {\r\n    const response = await fetch('https://hosting-backend-web-2-august-wail-el.onrender.com/all-challenges');\r\n    const {\r\n      challenges\r\n    } = await response.json();\r\n\r\n    const challengesList = document.getElementById('challenges-list');\r\n    challengesList.innerHTML = '';\r\n\r\n    challenges.forEach(challenge => {\r\n      const challengeElement = createChallengeElement(challenge);\r\n      challengesList.appendChild(challengeElement);\r\n    });\r\n  } catch (error) {\r\n    console.log('Error when retrieving challenges:', error);\r\n    console.log('Error when retrieving challenges');\r\n  }\r\n}\r\n\r\nfunction createChallengeElement(challenge) {\r\n  const challengeElement = document.createElement('div');\r\n  challengeElement.classList.add('challenge');\r\n\r\n  const textElement = document.createElement('h2');\r\n  textElement.textContent = `${challenge.text}`;\r\n\r\n  const descriptionElement = document.createElement('p');\r\n  descriptionElement.textContent = `${challenge.description}`;\r\n\r\n  const datasetElement = document.createElement('p');\r\n  datasetElement.textContent = `Dataset: ${challenge.dataset}`;\r\n\r\n  const pictureElement = document.createElement('img');\r\n  pictureElement.src = challenge.picture;\r\n  pictureElement.alt = 'Challenge Picture';\r\n\r\n  const resultElement = document.createElement('p');\r\n  resultElement.textContent = `Result: ${challenge.result}`;\r\n\r\n  const playButton = document.createElement('button');\r\n  playButton.textContent = 'Play';\r\n  playButton.addEventListener('click', () => {\r\n    playChallenge(challenge.challengeId);\r\n  });\r\n\r\n  challengeElement.appendChild(pictureElement);\r\n  challengeElement.appendChild(textElement);\r\n  challengeElement.appendChild(descriptionElement);\r\n  challengeElement.appendChild(datasetElement);\r\n  challengeElement.appendChild(resultElement);\r\n  challengeElement.appendChild(playButton);\r\n\r\n  return challengeElement;\r\n}\r\n\r\n\r\nasync function playChallenge(challengeId) {\r\n  try {\r\n    const response = await fetch(`https://hosting-backend-web-2-august-wail-el.onrender.com/challenges/${challengeId}`);\r\n    const challenge = await response.json();\r\n\r\n    const challengePage = window.open('', '_blank');\r\n\r\n    challengePage.document.write(`\r\n            <html>\r\n            <head>\r\n                <title>Challenge Details</title>\r\n                <style>\r\n                h1 h2 h3 p{\r\n                  font-family: 'Courier New', monospace;\r\n                }\r\n                \r\n                .container {\r\n                  max-width: 400px;\r\n                  margin: 0 auto;\r\n                  padding: 40px;\r\n                  background-color: #ffffff;\r\n                  border-radius: 5px;\r\n                  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n                }\r\n                \r\n                \r\n                form {\r\n                  display: flex;\r\n                  flex-direction: column;\r\n                }\r\n                \r\n                input[type=\"text\"],\r\n                input[type=\"password\"] {\r\n                  width: 100%;\r\n                  padding: 12px;\r\n                  border: none;\r\n                  border-radius: 3px;\r\n                  margin-bottom: 20px;\r\n                  background-color: #f9f9f9;\r\n                  color: #333333;\r\n                }\r\n                \r\n                input[type=\"submit\"] {\r\n                  width: 100%;\r\n                  padding: 12px;\r\n                  background-color: #428bca;\r\n                  color: #ffffff;\r\n                  border: none;\r\n                  border-radius: 3px;\r\n                  cursor: pointer;\r\n                  transition: background-color 0.3s ease;\r\n                }\r\n                \r\n                input[type=\"submit\"]:hover {\r\n                  background-color: #3071a9;\r\n                }\r\n                \r\n                .error-message {\r\n                  color: #ff0000;\r\n                  margin-bottom: 10px;\r\n                  font-size: 14px;\r\n                }\r\n                \r\n                \r\n                \r\n                \r\n                .navbar {\r\n                  background-color: #000000;\r\n                  display: flex;\r\n                  justify-content: space-between;\r\n                  padding: 20px;\r\n                  margin-bottom : 4em;\r\n                }\r\n                \r\n                .navbar a {\r\n                  color: #ffffff;\r\n                  text-decoration: none;\r\n                  font-size: 16px;\r\n                  margin-right: 20px;\r\n                  transition: color 0.3s ease;\r\n                }\r\n                \r\n                .navbar a:hover {\r\n                  color: #00ff00;\r\n                }\r\n                \r\n                .navbar {\r\n                  font-family: 'Courier New', monospace;\r\n                }\r\n                \r\n                .navbar a {\r\n                  border-bottom: 2px solid #00ff00;\r\n                  padding-bottom: 5px;\r\n                }\r\n                \r\n                .navbar a:hover {\r\n                  border-color: #ff00ff;\r\n                }\r\n                \r\n                body{\r\n                    text-align : center;\r\n                }\r\n                \r\n                img{\r\n                    width : 20%;\r\n                    height : auto;\r\n                }\r\n                \r\n                \r\n                \r\n                \r\n                .navbar {\r\n                  background-color: #000000;\r\n                  display: flex;\r\n                  justify-content: space-between;\r\n                  padding: 20px;\r\n                }\r\n                \r\n                .navbar a {\r\n                  color: #ffffff;\r\n                  text-decoration: none;\r\n                  font-size: 16px;\r\n                  margin-right: 20px;\r\n                  transition: color 0.3s ease;\r\n                }\r\n                \r\n                .navbar a:hover {\r\n                  color: #00ff00;\r\n                }\r\n                \r\n                .navbar {\r\n                  font-family: 'Courier New', monospace;\r\n                }\r\n                \r\n                .navbar a {\r\n                  border-bottom: 2px solid #00ff00;\r\n                  padding-bottom: 5px;\r\n                }\r\n                \r\n                .navbar a:hover {\r\n                  border-color: #ff00ff;\r\n                }\r\n                \r\n                #loginForm,\r\n                #registerForm {\r\n                  max-width: 400px;\r\n                  margin: 0 auto;\r\n                  padding: 20px;\r\n                  background-color: #111;\r\n                  border-radius: 8px;\r\n                  font-family: 'Courier New', monospace;\r\n                  color: #fff;\r\n                }\r\n                \r\n                #loginForm h1,\r\n                #registerForm h1 {\r\n                  color: #00ff00;\r\n                  text-align: center;\r\n                  margin-bottom: 20px;\r\n                }\r\n                \r\n                #loginForm label,\r\n                #registerForm label {\r\n                  font-size: 14px;\r\n                  display: block;\r\n                  margin-bottom: 5px;\r\n                }\r\n                \r\n                #loginForm input[type=\"email\"],\r\n                #loginForm input[type=\"password\"],\r\n                #registerForm input[type=\"text\"],\r\n                #registerForm input[type=\"email\"],\r\n                #registerForm input[type=\"password\"] {\r\n                  width: 95%;\r\n                  padding: 10px;\r\n                  border: none;\r\n                  background-color: #333;\r\n                  color: #fff;\r\n                  border-radius: 4px;\r\n                }\r\n                \r\n                #loginForm button.register,\r\n                #registerForm button.register {\r\n                  display: block;\r\n                  width: 100%;\r\n                  padding: 10px;\r\n                  background-color: #0f0f23;\r\n                  border: none;\r\n                  color: #fff;\r\n                  font-size: 16px;\r\n                  text-align: center;\r\n                  cursor: pointer;\r\n                  border-radius: 4px;\r\n                }\r\n                \r\n                #loginForm button.register a,\r\n                #registerForm button.register a {\r\n                  color: #fff;\r\n                  text-decoration: none;\r\n                }\r\n                \r\n                                                                                  /* Challenges */\r\n                /* .challenge {\r\n                  background-color: #111;\r\n                  padding: 10px;\r\n                  margin-bottom: 20px;\r\n                  border-radius: 8px;\r\n                  color: #fff;\r\n                }\r\n                \r\n                .challenge p {\r\n                  margin-bottom: 10px;\r\n                }\r\n                \r\n                .challenge img {\r\n                  max-width: 100%;\r\n                  border-radius: 4px;\r\n                  margin-bottom: 10px;\r\n                }\r\n                \r\n                .challenge button {\r\n                  display: block;\r\n                  width: 100%;\r\n                  padding: 10px;\r\n                  background-color: #0f0f23;\r\n                  border: none;\r\n                  color: #fff;\r\n                  font-size: 16px;\r\n                  text-align: center;\r\n                  cursor: pointer;\r\n                  border-radius: 4px;\r\n                  margin-top: 10px;\r\n                }\r\n                \r\n                 */\r\n                \r\n                 body {\r\n                  background-color: #000;\r\n                  color: #fff;\r\n                  font-family: 'Courier New', Courier, monospace;\r\n                \r\n                }\r\n                \r\n                .container {\r\n                  display: flex;\r\n                  flex-wrap: wrap;\r\n                  justify-content: center;\r\n                }\r\n                \r\n                .challenge {\r\n                  background-color: #222;\r\n                  border-radius: 8px;\r\n                  padding: 20px;\r\n                  margin: 10px;\r\n                  width: 300px;\r\n                  text-align: center;\r\n                }\r\n                \r\n                .challenge h1 {\r\n                  text-align: center;\r\n                  color: white;\r\n                  font-weight: normal\r\n                }\r\n                \r\n                .challenge img {\r\n                  width: 100%;\r\n                  height: auto;\r\n                  border-radius: 8px;\r\n                  margin-bottom: 10px;\r\n                }\r\n                \r\n                .challenge h2 {\r\n                  font-size: 20px;\r\n                  margin-bottom: 10px;\r\n                }\r\n                \r\n                .challenge p {\r\n                  font-size: 14px;\r\n                  margin-bottom: 10px;\r\n                }\r\n                \r\n               button {\r\n                  background-color: #00ff00;\r\n                  color: black;\r\n                  border: none;\r\n                  border-radius: 4px;\r\n                  padding: 10px 20px;\r\n                  font-size: 16px;\r\n                  cursor: pointer;\r\n                  transition: background-color 0.3s;\r\n                  font-family: 'Courier New', Courier, monospace;\r\n                }\r\n                button:hover {\r\n                    background-color: purple;\r\n                    transition: background-color 0.3s;\r\n                    color: white;\r\n                  }\r\n                \r\n               \r\n                \r\n                </style>\r\n            </head>\r\n            <body>\r\n            <div class=\"navbar\">\r\n            <a href=\"/login.html\">Login</a>\r\n            <a href=\"/register.html\">Register</a>\r\n            <a href=\"/home.html\">Home</a>\r\n            <a href=\"/newChallenge.html\">Create New Challenge</a>\r\n            <a href=\"/myChallenges.html\">My Challenges</a>\r\n        </div>\r\n        <button onclick=\"goBack()\">Return</button>\r\n                <h1>${challenge.text}</h1>\r\n                <p>Description: ${challenge.description}</p>\r\n                <p>Dataset: ${challenge.dataset}</p>\r\n                <img src=\"${challenge.picture}\" alt=\"Challenge Picture\">\r\n                <p>Result: ${challenge.result}</p>\r\n\r\n                <h2>Your Solution</h2>\r\n                <textarea id=\"solution-textarea\" rows=\"4\" cols=\"50\"></textarea>\r\n                <button onclick=\"submitSolution('${challengeId}')\">Send</button>\r\n\r\n                <script>\r\n                function goBack() {\r\n                    window.close();\r\n                }\r\n                    function submitSolution(challengeId) {\r\n                        const solution = document.getElementById('solution-textarea').value;\r\n                        displayFeedback('Bien joué');\r\n                    }\r\n                </script>\r\n            </body>\r\n            </html>\r\n        `);\r\n\r\n    challengePage.document.close();\r\n  } catch (error) {\r\n    console.error('Error when retrieving challenges:', error);\r\n    displayFeedback('Error when retrieving challenges');\r\n  }\r\n}\r\n\r\n\r\n// async function createChallenge(event) {\r\n//     event.preventDefault();\r\n\r\n//     const text = document.getElementById('text').value;\r\n//     const description = document.getElementById('description').value;\r\n//     const dataset = document.getElementById('dataset').value;\r\n//     const picture = document.getElementById('picture').value;\r\n//     const result = document.getElementById('result').value;\r\n\r\n//     const userId = localStorage.getItem('userId');\r\n//     if (!userId) {\r\n//         console.log('Connectez-vous d\\'abord');\r\n//         return;\r\n//     }\r\n\r\n//     const challengeData = {\r\n//         text,\r\n//         description,\r\n//         dataset,\r\n//         picture,\r\n//         result,\r\n//         userId\r\n//     };\r\n\r\n//     try {\r\n//         const response = await fetch('http://localhost:5000/newChallenges', {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify(challengeData)\r\n//         });\r\n\r\n//         const {\r\n//             message,\r\n//             challengeId\r\n//         } = await response.json();\r\n\r\n//         if (response.ok) {\r\n//             alert(`${message} Challenge ID: ${challengeId}`);\r\n//             const currentChallengeIds = JSON.parse(localStorage.getItem('currentChallengeIds')) || [];\r\n//             currentChallengeIds.push(challengeId);\r\n//             localStorage.setItem('currentChallengeIds', JSON.stringify(currentChallengeIds));\r\n//             document.getElementById('create-challenge-form').reset();\r\n//             getAllChallenges();\r\n//         } else {\r\n//             alert(message);\r\n//         }\r\n//     } catch (error) {\r\n//         console.error('Erreur lors de la création du défi:', error);\r\n//         alert('Une erreur est survenue lors de la création du défi');\r\n//     }\r\n// }\r\n\r\n\r\n// Fonction pour créer un nouveau défi\r\n\r\n\r\nasync function createChallenge(event) {\r\n  event.preventDefault();\r\n\r\n  const text = document.getElementById('text').value;\r\n  const description = document.getElementById('description').value;\r\n  const dataset = document.getElementById('dataset').value;\r\n  const pictureQuery = document.getElementById('picture').value;\r\n  const result = document.getElementById('result').value;\r\n\r\n  const userId = localStorage.getItem('userId');\r\n  if (!userId) {\r\n    console.log('Log-in first !');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const unsplashResponse = await fetch(`https://api.unsplash.com/photos/random?query=${pictureQuery}&client_id=fr0uKpERiV1VDzhrSbC6Tv5LuFzNL0eQduOaYUmXBN0`);\r\n    const unsplashData = await unsplashResponse.json();\r\n\r\n    if (unsplashResponse.ok) {\r\n      const picture = unsplashData.urls.regular;\r\n      const altDescription = unsplashData.alt_description;\r\n\r\n      const challengeData = {\r\n        text,\r\n        description,\r\n        dataset,\r\n        picture,\r\n        altDescription,\r\n        result,\r\n        userId\r\n      };\r\n\r\n      const response = await fetch('https://hosting-backend-web-2-august-wail-el.onrender.com/newChallenges', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(challengeData)\r\n      });\r\n\r\n      const {\r\n        message,\r\n        challengeId\r\n      } = await response.json();\r\n\r\n      if (response.ok) {\r\n        displayFeedback(`${message}`);\r\n        const currentChallengeIds = JSON.parse(localStorage.getItem('currentChallengeIds')) || [];\r\n        currentChallengeIds.push(challengeId);\r\n        localStorage.setItem('currentChallengeIds', JSON.stringify(currentChallengeIds));\r\n        document.getElementById('create-challenge-form').reset();\r\n        getAllChallenges();\r\n      } else {\r\n        displayFeedback(message);\r\n      }\r\n    } else {\r\n      displayFeedback('Error fetching api Unplaash');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error when retrieving challenges:', error);\r\n    console.error('Error when retrieving challenges');\r\n  }\r\n}\r\n\r\n\r\nasync function getMyChallenges(userId) {\r\n  try {\r\n    const response = await fetch(`https://hosting-backend-web-2-august-wail-el.onrender.com/my-challenges?userId=${userId}`);\r\n    const {\r\n      challenges\r\n    } = await response.json();\r\n\r\n    const myChallengesList = document.getElementById('my-challenges-list');\r\n    myChallengesList.innerHTML = '';\r\n\r\n    challenges.forEach(challenge => {\r\n      const challengeElement = createChallengeElement(challenge);\r\n\r\n      const deleteButton = document.createElement('button');\r\n      deleteButton.textContent = 'Delete';\r\n      deleteButton.addEventListener('click', () => {\r\n        deleteChallenge(challenge.challengeId);\r\n      });\r\n\r\n      challengeElement.appendChild(deleteButton);\r\n      myChallengesList.appendChild(challengeElement);\r\n    });\r\n  } catch (error) {\r\n    console.log('Error when retrieving challenges of user:', error);\r\n    console.log('Error when retrieving challenges of user');\r\n  }\r\n}\r\n\r\nasync function deleteChallenge(challengeId) {\r\n  try {\r\n    const response = await fetch(`https://hosting-backend-web-2-august-wail-el.onrender.com/deleteChallenge/${challengeId}`, {\r\n      method: 'DELETE'\r\n    });\r\n\r\n    const {\r\n      message\r\n    } = await response.json();\r\n\r\n    if (response.ok) {\r\n      displayFeedback(message);\r\n      const currentChallengeIds = JSON.parse(localStorage.getItem('currentChallengeIds')) || [];\r\n      const updatedChallengeIds = currentChallengeIds.filter(id => id !== challengeId);\r\n      localStorage.setItem('currentChallengeIds', JSON.stringify(updatedChallengeIds));\r\n      const userId = localStorage.getItem('userId');\r\n      if (userId) {\r\n        getMyChallenges(userId);\r\n      }\r\n    } else {\r\n      displayFeedback(message);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error deleting challenges:', error);\r\n    displayFeedback('Error deleting this challenge');\r\n  }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n  const userId = localStorage.getItem('userId');\r\n  if (userId) {\r\n    getMyChallenges(userId);\r\n  }\r\n\r\n  const currentChallengeIds = JSON.parse(localStorage.getItem('currentChallengeIds')) || [];\r\n  await Promise.all(\r\n    currentChallengeIds.map(async challengeId => {\r\n      const response = await fetch(`https://hosting-backend-web-2-august-wail-el.onrender.com/challenges/${challengeId}`);\r\n      const challenge = await response.json();\r\n      const challengeElement = createChallengeElement(challenge);\r\n      document.getElementById('challenges-list').appendChild(challengeElement);\r\n    })\r\n  );\r\n});\r\n\r\ndocument.getElementById('create-challenge-form').addEventListener('submit', createChallenge);\n\n//# sourceURL=webpack://web2-frontend-wail-elm/./src/scripts.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/scripts.js"]();
/******/ 	
/******/ })()
;